import React from 'react';
import { Server } from '../../types';
import { Users, Signal, Calendar, ExternalLink, Map } from 'lucide-react';

const countryMap: { [key: string]: string } = {
  'US': 'ğŸ‡ºğŸ‡¸', 'GB': 'ğŸ‡¬ğŸ‡§', 'DE': 'ğŸ‡©ğŸ‡ª', 'FR': 'ğŸ‡«ğŸ‡·', 'IT': 'ğŸ‡®ğŸ‡¹',
  'ES': 'ğŸ‡ªğŸ‡¸', 'PT': 'ğŸ‡µğŸ‡¹', 'NL': 'ğŸ‡³ğŸ‡±', 'BE': 'ğŸ‡§ğŸ‡ª', 'CH': 'ğŸ‡¨ğŸ‡­',
  'AT': 'ğŸ‡¦ğŸ‡¹', 'SE': 'ğŸ‡¸ğŸ‡ª', 'NO': 'ğŸ‡³ğŸ‡´', 'DK': 'ğŸ‡©ğŸ‡°', 'FI': 'ğŸ‡«ğŸ‡®',
  'IE': 'ğŸ‡®ğŸ‡ª', 'PL': 'ğŸ‡µğŸ‡±', 'CZ': 'ğŸ‡¨ğŸ‡¿', 'SK': 'ğŸ‡¸ğŸ‡°', 'HU': 'ğŸ‡­ğŸ‡º',
  'RO': 'ğŸ‡·ğŸ‡´', 'BG': 'ğŸ‡§ğŸ‡¬', 'GR': 'ğŸ‡¬ğŸ‡·', 'HR': 'ğŸ‡­ğŸ‡·', 'RS': 'ğŸ‡·ğŸ‡¸',
  'SI': 'ğŸ‡¸ğŸ‡®', 'EE': 'ğŸ‡ªğŸ‡ª', 'LV': 'ğŸ‡±ğŸ‡»', 'LT': 'ğŸ‡±ğŸ‡¹', 'UA': 'ğŸ‡ºğŸ‡¦',
  'BY': 'ğŸ‡§ğŸ‡¾', 'RU': 'ğŸ‡·ğŸ‡º', 'CA': 'ğŸ‡¨ğŸ‡¦', 'MX': 'ğŸ‡²ğŸ‡½', 'BR': 'ğŸ‡§ğŸ‡·',
  'AR': 'ğŸ‡¦ğŸ‡·', 'CL': 'ğŸ‡¨ğŸ‡±', 'PE': 'ğŸ‡µğŸ‡ª', 'CO': 'ğŸ‡¨ğŸ‡´', 'VE': 'ğŸ‡»ğŸ‡ª',
  'AU': 'ğŸ‡¦ğŸ‡º', 'NZ': 'ğŸ‡³ğŸ‡¿', 'JP': 'ğŸ‡¯ğŸ‡µ', 'KR': 'ğŸ‡°ğŸ‡·', 'CN': 'ğŸ‡¨ğŸ‡³',
  'IN': 'ğŸ‡®ğŸ‡³', 'SG': 'ğŸ‡¸ğŸ‡¬', 'ID': 'ğŸ‡®ğŸ‡©', 'MY': 'ğŸ‡²ğŸ‡¾', 'TH': 'ğŸ‡¹ğŸ‡­',
  'VN': 'ğŸ‡»ğŸ‡³', 'PH': 'ğŸ‡µğŸ‡­', 'TR': 'ğŸ‡¹ğŸ‡·', 'IL': 'ğŸ‡®ğŸ‡±', 'AE': 'ğŸ‡¦ğŸ‡ª',
  'SA': 'ğŸ‡¸ğŸ‡¦', 'ZA': 'ğŸ‡¿ğŸ‡¦'
};

interface ServerCardProps {
  server: Server;
  isDark?: boolean;
}

export default function ServerCard({ server, isDark }: ServerCardProps) {
  return (
    <div className={`rounded-lg shadow-lg overflow-hidden transition-all hover:scale-[1.02] ${
      isDark 
        ? 'bg-gray-800 border border-gray-700' 
        : 'bg-white'
    }`}>
      <div className="p-6">
        <div className="flex justify-between items-start mb-4">
          <h3 className={`font-bold text-lg truncate flex-1 ${
            isDark ? 'text-gray-200' : 'text-gray-800'
          }`}>
            {server.name}
          </h3>
          <a
            href={server.map.url}
            target="_blank"
            rel="noopener noreferrer"
            className={`ml-2 p-1 rounded-full hover:bg-gray-100 transition-colors ${
              isDark ? 'hover:bg-gray-700' : 'hover:bg-gray-100'
            }`}
          >
            <ExternalLink size={16} className={isDark ? 'text-pink-400' : 'text-indigo-600'} />
          </a>
        </div>

        <div className="space-y-2">
          <div className={`grid grid-cols-2 gap-4 text-sm ${
            isDark ? 'text-gray-400' : 'text-gray-600'
          }`}>
            <div className="flex items-center gap-2">
              <Users size={16} />
              <span>{server.playerCount} players</span>
            </div>
            <div className="flex items-center gap-2">
              <span className="text-xl" title={server.country}>
                {countryMap[server.country]}
              </span>
            </div>
            <div className="flex items-center gap-2">
              <Signal size={16} />
              <span>{server.ping}ms</span>
            </div>
            <div className="flex items-center gap-2">
              <Calendar size={16} />
              <span>Last Wipe: {new Date(server.wipeDate).toLocaleDateString()}</span>
            </div>
          </div>

          <div className={`mt-4 pt-4 border-t ${
            isDark ? 'border-gray-700' : 'border-gray-200'
          }`}>
            <div className="flex items-center gap-2">
              <Map size={16} className={isDark ? 'text-pink-400' : 'text-indigo-600'} />
              <span className={`font-medium ${
                isDark ? 'text-gray-300' : 'text-gray-700'
              }`}>
                Map Size: {server.map.size}
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}